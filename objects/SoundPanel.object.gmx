<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>UIComponent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>soundid = "test";
vol = 0;
freq = 0;
enable_freq = true;
group = "belly";
width = 250;
slider_xstart = 50;
slider_height = 40;
header_height = 10;
bar_height = 5;

drag_first = false;
drag_second = false;
groupid = noone;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var snd = Control.sounds[? soundid];
vol = snd[? "vol"];
freq = snd[? "freq"];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound = sound_create(soundid, enable_freq, vol, freq);

height = header_height + slider_height;
if (enable_freq)
    height += slider_height;
    
for (var i=0; i &lt; instance_number(BtTab); i ++){
    var tab = instance_find(BtTab, i);
    if (tab.group == group){
        groupid = tab;
        break;
    }
}

for (var i=0; i &lt; instance_number(UIComponent); i ++){
    var panel = instance_find(UIComponent, i);
    if (panel.id &lt; id&amp;&amp;panel.group == group){
        y = panel.y + panel.height + 3;
    }
}

//if (y &lt; 75)
//    y = 75;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>length = width - 3 - slider_xstart;
if (drag_first || drag_second){
   var xx = (mouse_x - slider_xstart - x);
   if (xx &lt; 0)
     xx = 0;
    if (xx &gt; length)
        xx = length;
    var value = xx/length;
    if (drag_first){
        vol = value;
        audio_group_set_gain(audio_group_get_index(soundid), vol, 0);
    }else
        freq = value;
        
    sound[? "vol"] = vol;
    sound[? "freq"] = freq;
}

if (groupid.selected &amp;&amp; Control.deployed &amp;&amp; !setting_get_toggled("Set Individual Sounds"))
    x = 5;
else
    x = -1000;
    
if (Control.updateProfile){
    vol = sound[? "vol"];
    freq = sound[? "freq"];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drag_first){
    
}

drag_first = false;
drag_second = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; x + slider_xstart &amp;&amp; mouse_x &lt; x + width - 3){
    if  (mouse_y &gt; y + header_height &amp;&amp; mouse_y &lt; y + header_height + slider_height/1.5){
        drag_first = true;
    }else if (mouse_y &gt; y+ header_height + slider_height/1.5 &amp;&amp;
                mouse_y &lt; y+ header_height + slider_height*1.5){
        drag_second = true;               
    }
}

Control.clear_screen = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!check_power_save())
    exit;

draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text(x+width/2, y, soundid);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_text(x + 3, y + header_height + slider_height/2, "vol");
draw_healthbar(x + slider_xstart, y+header_height+(slider_height-bar_height)/2,x + width - 3, y+header_height+(slider_height-bar_height)/2+ bar_height, vol*100, c_black, c_aqua, c_aqua, 0, 1, 0);
draw_sprite(sprSlideHandle, 0, x + slider_xstart + vol*length,y + header_height + (slider_height-bar_height)/2+bar_height/2);
if (enable_freq){
    draw_text(x + 3, y + header_height + slider_height, "freq");
    draw_healthbar(x + slider_xstart, y+header_height+slider_height/2+(slider_height-bar_height)/2,x + width - 3, y+header_height+slider_height/2+(slider_height-bar_height)/2+ bar_height, freq*100, c_black, c_aqua, c_aqua, 0, 1, 0);
    draw_sprite(sprSlideHandle, 0, x + slider_xstart + freq*length,y + header_height +slider_height/2 + (slider_height-bar_height)/2 +bar_height/2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
