<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

// some variables for demo purposes
_frame = 0;
_eyecandy = 0;

// change some initial settings

/*

There are three scale modes:
    
    fill: the video fills in the container entirely, no letterbox or crop, but stretching may occur
    cover: ensures the video covers the container, no letterboxing but cropping may occur
    contain: fits the video inside the container but keeps aspect ratio, letterboxing may occur
    
*/
ex_video_set_scale_mode("fill");

ex_video_set_transparency(0.8); // set the video transparency to 80% for effect
ex_video_set_background_visibility(1); // do not show the black letterboxing
ex_video_set_position(400, 200); // set the position, default is 0, 0
ex_video_set_size(520, 340); // set the size, default is game window's size

/*

NOTE: You will need to supply the same video in mp4, m4v, ogv and webm formats 
for maximum compatibility with different web browsers, just supply a mp4 link
in ex_video_play() though, it will automatically serve another video filetype 
until the browser can play it

*/

// play the included video file, looping
ex_video_play(working_directory+"test.mp4", true);
//ex_video_play("https://www.youtube.com/watch?v=nxOE21BtpBI", false); //uncomment to see YouTube video in action

// you can set the volume of the video at any point by using the following function
ex_video_set_volume(0.6);

/*

NOTE: you can use ex_video_stop() to stop a looping sound
ex_video_stop() completely removes a video as well from your scene.

*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show some 3D rotation effects on the video

if (!_eyecandy) { exit; }

if (_frame &gt; 359) { _frame = 0; } else { _frame +=1; }

ex_video_set_angle3d(-_frame, _frame, -_frame, 1800); // animate the 3D changes on the video

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause the video on click

if (ex_video_is_paused()) {
    ex_video_resume();
} else {
    ex_video_pause();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle switching to fullscreen

if (window_get_fullscreen()) {
    // stop effects and focus on the video full screen
    _eyecandy = false;
    ex_video_set_angle3d(0, 0, 0, 0);
    ex_video_set_scale_mode("cover"); // set it so the video always covers the screen (no letterbox)
    ex_video_set_transparency(1.0); // no transparency, we want the video opaque for fullscreen
    ex_video_set_position(0, 0); // reset position
    ex_video_set_size(display_get_width(), display_get_height()); // adapt to the screen resolution
} else {
    // bring back the effects and reposition the video
    _eyecandy = true;
    ex_video_set_scale_mode("fill"); // set it so the video fills the dimensions correctly
    ex_video_set_position(400, 200);  
    ex_video_set_size(520, 340);
    ex_video_set_transparency(0.8);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw all the properties

draw_set_font(fnt_sample_ex_video2);

draw_text(x, y-150, "exVideo HTML5");

draw_set_font(fnt_sample_ex_video);

// how to check if video is buffering (but not ended)
if (!ex_video_is_ready() and ex_video_is_playing()) {
    draw_set_color(c_orange);
    draw_text(x, y-40, "Buffering...");
}

// draw video parameters 
draw_set_color(c_white);
draw_text(x, y, 
    "Is Playing: "+string(ex_video_is_playing())+
    "#Is Paused: "+string(ex_video_is_paused())+
    "#Is Ready: "+string(ex_video_is_ready())+
    "#Track Position: "+string(ex_video_get_track_position())+
    "s#Track Duration: "+string(ex_video_get_track_duration())+
    "s#Volume: "+string(ex_video_get_volume())+
    "#Type: "+string(ex_video_get_type())+
    "#X: "+string(ex_video_get_position_x())+
    "#Y: "+string(ex_video_get_position_y())+
    "#Width: "+string(ex_video_get_width())+
    "#Height: "+string(ex_video_get_height())+
    "#Scale Mode: "+string(ex_video_get_scale_mode())+
    "#Angle: "+string(ex_video_get_angle())+
    "#Angle3D X: "+string(ex_video_get_angle3d_x())+
    "#Angle3D Y: "+string(ex_video_get_angle3d_y())+
    "#Angle3D Z: "+string(ex_video_get_angle3d_z())+
    "#Perspective: "+string(ex_video_get_angle3d_perspective())+
    "#Transparency: "+string(ex_video_get_transparency())+
    "#Background Visible: "+string(ex_video_get_background_visibility())+
    "#Press F10 for Fullscreen! (Check the Resize Event for details)"+
    "#Press E to toggle 3D rotation"
);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toggle Eyecandy

_eyecandy = !_eyecandy;

if (_eyecandy == false) {
    ex_video_set_angle(0);
    ex_video_set_angle3d(0, 0, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
